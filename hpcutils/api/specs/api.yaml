openapi: 3.0.5
info:
  version: 0.0.1
  title: hpcutils

paths:
  /health_check:
    get:
      tags:
        - health_check
      operationId: hpcutils.api.views.health_check
      summary: Check API alive
      responses:
        200:
          description: 'Checks to see if API is alive'

  /create/{cluster}:
    post:
      tags:
        - create
      operationId: hpcutils.api.views.create_cluster_config
      parameters:
        - $ref: '#/components/parameters/Cluster'
        - $ref: '#/components/parameters/ProjectName'
        - $ref: '#/components/parameters/GithubUsername'
        - $ref: '#/components/parameters/GithubRepository'
      responses:
        200:
          description: 'successfully created cluster config'

        #- $ref: '#/components/parameters/Walltime'

        #- $ref: '#/components/parameters/StorageMem'
  /run/gpu/{cluster}:
    post:
      tags:
        - run
      operationId: hpcutils.api.views.run_gpu_job
      parameters:
        - $ref: '#/components/parameters/Cluster'
        - $ref: '#/components/parameters/ProjectName'
        - $ref: '#/components/parameters/JobName'
        - $ref: '#/components/parameters/ScriptTemplateName'
        - $ref: '#/components/parameters/EnvVars'

      requestBody:
        $ref: '#/components/requestBodies/JobVars'
      summary: Submit myriad job
      responses:
        200:
          description: 'successfully submitted job'
  /gpu/myriad:
    post:
      tags:
        - submit
      operationId: hpcutils.api.views.gpu_myriad
      parameters:
        - $ref: '#/components/parameters/ProjectName'
        - $ref: '#/components/parameters/Walltime'
        - $ref: '#/components/parameters/StorageMem'
        - $ref: '#/components/parameters/ScriptTemplateName'
        - $ref: '#/components/parameters/EnvVars'
      summary: Submit myriad job
      responses:
        200:
          description: 'successfully submitted job'



components:
  parameters:
    JobName:
      name: job_name
      in: query
      required: true
      description: name of job
      schema:
        $ref: '#/components/schemas/JobName'
    GithubUsername:
      name: github_username
      in: query
      required: true
      description: github username
      schema:
        $ref: '#/components/schemas/GithubUsername'
    GithubRepository:
      name: github_password
      in: query
      required: true
      description: github password
      schema:
        $ref: '#/components/schemas/GithubRepository'
    ProjectName:
      name: project_name
      in: query
      required: true
      description: name of project
      schema:
        $ref: '#/components/schemas/ProjectName'
    Cluster:
      name: cluster
      in: path
      required: true
      description: name of cluster
      schema:
        $ref: '#/components/schemas/Cluster'
    Walltime:
      name: walltime
      in: query
      required: true
      description: maximum walltime to use
      schema:
        $ref: '#/components/schemas/Walltime'
    StorageMem:
      name: storage_mem
      in: query
      required: true
      description: temporary storage memory (in Gigs)
      schema:
        $ref: '#/components/schemas/StorageMem'

    EnvVars:
      name: env_vars
      in: query
      required: true
      description: environment variables
      schema:
        $ref: '#/components/schemas/EnvVars'

    ScriptTemplateName:
      name: script_template_name
      in: query
      required: true
      description: path to bash script template
      schema:
        $ref: '#/components/schemas/ScriptTemplateName'

  requestBodies:
    JobVars:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobVars'
  schemas:
    GithubUsername:
      type: string
      example: namiyousef
    GithubRepository:
      type: string
      example: divergent-examples
    JobVars:
      type: object
      properties:
        walltime:
          $ref: '#/components/schemas/Walltime'
        storage_mem:
          $ref: '#/components/schemas/StorageMem'




    Cluster:
      type: string
      enum: ["myriad", "beaker"]
    ProjectName:
      type: string

    Walltime:
      type: string
      example: "6:00:00"
    StorageMem:
      type: integer
      example: 15
    JobName:
      type: string
    EnvVars:
      type: object
    ScriptTemplateName:
      type: string
      example: div_examples.sh